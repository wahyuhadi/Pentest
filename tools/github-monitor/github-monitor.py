"""
	This Tools for monitoring github for ossint
	By : @wahyuhadi
"""

import requests
import argparse
import json
import sys
from time import sleep

# Global Variable
GITHUB_CODE  = "https://api.github.com/search/code?q=" # for search code in some user




def searchInUser(user, keyword):
	# for search code in user github
	# parameter required is user and keyword
	try :
		parameter = str(keyword)+"+in:file,readme,code,description+user:"+str(user)
		url = GITHUB_CODE+parameter
		
		responses = requests.get(
            url,
            headers={'Accept': 'application/vnd.github.v3.text-match+json', 'X-RateLimit-Limit': '600000'},
        )


		json_headers = responses.headers
		json_response = json.loads(responses.text)
		rate_limit = json_headers['X-RateLimit-Remaining']

		if (int(rate_limit) <= 1):
			# github rate limit , see full api doc for github
			print ("[!] X-RateLimit-Remaining is ", rate_limit, " sleep for 20 seconds before get responses")
			print ("[!] Increse your X-RateLimit-Remaining with token \n")
			sleep(20)


		for i in range (0, len(json_response['items'])):
			print ("[+] Name : ",json_response['items'][i]['name'])
			print ("[+] Path : ",json_response['items'][i]['path'])
			print ("[+] Url  : ", json_response['items'][i]['html_url'])
			#print ("[+] Match: ", json_response['items'][i]['text_matches'])
			print ("\n")

		print ("[+] Found ",json_response['total_count'], "keyword ", keyword)
	except  :
		print ("[x] Something Error ", sys.exc_info()[0])
		pass


def main():

	parser = argparse.ArgumentParser()
	parser.add_argument("-f", help="location file list user - example -f user.txt")
	parser.add_argument("-k", help="keyword will be find -  example -k password,username")
	parser.add_argument("-u", help="username github - example -u wahyuhadi")
	argv = (parser.parse_args())

	# input argv to pariable 
	keyword = argv.k    # keyword can be more than one example -k user,pass,db....
	userFile = argv.f
	username = argv.u

	if (keyword == None) :
		# if Keyword not declare
		print ("[!] Please add argument -k for keyword")
		sys.exit(0)
	


	if (username):
		# if username argument is true
		searchInUser(username, keyword)

if __name__ == '__main__':
	main()